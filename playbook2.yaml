-
  name: running second playbook that deploys app and then deletes previous EC2 instance
  hosts: all
  become: yes
  become_method: sudo
  tasks:

  vars:
    contents: "{{ lookup('file', '/var/lib/jenkins/workspace/wilson-test-create-ec2/instanceid.txt')}}"

    - name: Stop or terminate myserver instance
      local_action:
          module: ec2
          region: "us-east-1"
          instance_ids: "{{ contents }}"
          state: stopped
      with_items: "{{ ec2.instances}}"  

    # - name: Update all packages
    #   yum:
    #     name: '*'
    #     state: latest
    #     update_only: yes

    # - name: Ensure a list of yum packages are installed
    #   yum:
    #     name: "{{ packages }}"
    #     state: latest
    #     update_cache: yes
    #   vars:
    #     packages:
    #     - python-pip
    #     - yum-utils
    #     - device-mapper-persistent-data
    #     - lvm2
    #     - amazon-linux-extras

    # - name: Add extras repository
    #   shell: yum-config-manager --enable extras

    # - name: Install docker-ce (centos) via amazon-linux-extras packages
    #   shell: "amazon-linux-extras install docker=18.06.1 -y"

    # - name: Enable Docker CE service at startup
    #   service:
    #     name: docker
    #     state: started
    #     enabled: yes

    # - name: Ensure Python pip packages are installed
    #   pip:
    #     name: "{{ packages }}"
    #   vars:
    #     packages:
    #     - boto
    #     - boto3
    #     - docker-compose

    # - name: pull an image
    #   docker_image:
    #     name: nyuwilson/wilson:jenkinsdockerpush

    # - name: stop all docker containers
    #   shell: docker stop $(docker ps -a -q)
    #   ignore_errors: true

    # - name: service docker
    #   service:
    #     name=docker
    #     state=started
    #     enabled=yes

    # - name: Start docker docker_container
    #   docker_container:
    #     name: nyuwilson
    #     image: nyuwilson/wilson:jenkinsdockerpush
    #     ports:
    #       - "80:80"

    # - name: check if docker is Running
    #   shell: docker ps






